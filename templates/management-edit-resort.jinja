{% extends "management.jinja" %}

{% block title %}
Edit Resort
{% endblock title %}

{% block pagehead %}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>

<script type="text/javascript" src="https://cdn.rawgit.com/makinacorpus/Leaflet.GeometryUtil/master/src/leaflet.geometryutil.js">
</script>

<script type="text/javascript" src="https://cdn.jsdelivr.net/gh/makinacorpus/Leaflet.AlmostOver@master/src/leaflet.almostover.js">
</script>

<link href="/management-edit-resort.css" rel="stylesheet" />

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol/dist/L.Control.Locate.min.css" />
<script src="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol/dist/L.Control.Locate.min.js" charset="utf-8"></script>

<script src="https://unpkg.com/leaflet-rotate@0.2.8/dist/leaflet-rotate-src.js"></script>

<script src="/leaflet.textpath.js"></script>

{% endblock pagehead %}

{% block insideContent %}
    <form id="search-form" class="search-form">
        <select id="search" name="q" type="search">
            <option value="" disabled selected>Select Resort</option>
            {% for resort in resorts %}
            <option value="{{resort}}">{{resort}}</option>
            {% endfor %}
        </select>
        <input class="button-cta" id="submit" type="submit" value="Search" />
    </form>
    <h2>{{mountain.name}}</h2>
    <div id='map'></div>
    <script>
        let trails = {{geojson}};

        var mouseOver = true;
        if (Object.keys(trails.features).length > 200) {
            mouseOver = false;
        }

        var map = L.map('map', {rotate: true,
                                rotateControl: {
					                closeOnZeroBearing: false,
				                },
				                touchRotate: false,
                                bearing: {{mountain.bearing}},
                                almostOnMouseMove: mouseOver,
        }).setView([{{mountain.lat}},{{mountain.lon}}], 13);

        L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}', {
            attribution: 'Data: OSM, USGS. Tiles &copy; Esri'
        }).addTo(map);

        function onEachFeature(feature, layer) {
            // does this feature have a property named popupContent?
            if (feature.properties && feature.properties.popupContent) {
                layer.bindPopup(feature.properties.popupContent);
                if (map.getZoom() > 14) {
                    layer.setText(feature.properties.label, {offset: -5, center: true, orientation: feature.properties.orientation});
                }
            }
        }

        function style(feature) {
            if (feature.properties.gladed) {
                if (feature.properties.gladed == 'True') {
                    return {color: feature.properties.color, weight: 4, dashArray: '5,10'}
                }
            }
            return {color: feature.properties.color, weight: 4}
        }

        
        function addTrails() {
            geojson_features = L.geoJSON(trails, {onEachFeature: onEachFeature, style: style}).addTo(map);
            map.almostOver.addLayer(geojson_features);
        }

        addTrails();
        map.fitBounds(geojson_features.getBounds());
        
        // whenever the zoom level changes, remove the layer and re-add it to 
        // force the style to update based on the current map scale
        map.on('zoomend', function(){
            geojson_features.removeFrom(map);
            geojson_features.removeFrom(map.almostOver);
            addTrails();
        });

        map.on('almost:over', function (e) {
            e.layer.setStyle({weight: 10, opacity: .7});
        });

        map.on('almost:out', function (e){
            e.layer.setStyle({weight: 4, opacity: 1});
        });

        map.on('almost:click', function (e) {
            e.layer.openPopup();
        });

        var legend = L.control({ position: "bottomright" });

        legend.onAdd = function(map) {
        var div = L.DomUtil.create("div", "legend");
            div.innerHTML += '<i style="background: green"></i><span>Beginner</span><br>';
            div.innerHTML += '<i style="background: royalblue"></i><span>Intermediate</span><br>';
            div.innerHTML += '<i style="background: black"></i><span>Advanced</span><br>';
            div.innerHTML += '<i style="background: red"></i><span>Expert</span><br>';
            div.innerHTML += '<i style="background: gold"></i><span>Extreme</span><br>';
            div.innerHTML += '<span>- - - Gladed</span><br>';
            return div;
        };

        legend.addTo(map);


        L.control.locate().addTo(map);

    </script>
{% endblock insideContent %}

{% block postbody %}
<script src="/management-edit-resort.js"></script>
{% endblock postbody %}