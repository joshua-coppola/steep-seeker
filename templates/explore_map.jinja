{% extends "page_base.jinja" %}

{% block title %}
Explore Resorts - Find Ski Resorts Across the USA
{% endblock title %}

{% block pagehead %}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>

<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>

<script type="text/javascript" src="https://cdn.rawgit.com/makinacorpus/Leaflet.GeometryUtil/master/src/leaflet.geometryutil.js">
</script>

<script type="text/javascript" src="https://cdn.jsdelivr.net/gh/makinacorpus/Leaflet.AlmostOver@master/src/leaflet.almostover.js">
</script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol/dist/L.Control.Locate.min.css" />
<script src="https://cdn.jsdelivr.net/npm/leaflet.locatecontrol/dist/L.Control.Locate.min.js" charset="utf-8"></script>

<link href="/explore.css" rel="stylesheet" />
{% endblock pagehead %}

{% block content %}
<section id="content">
<div id='map'></div>
<script>
    locations = {{geojson}}
    var map = L.map('map').setView([47.8281, -113.5795], 4);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    function onEachFeature(feature, layer) {
        if (feature.properties && feature.properties.popupContent) {
            var mountainIcon = L.divIcon({
                className: 'mountain-icon',
                html: `
                    <div>
                        <img src="${feature.properties.icon}" 
                            style="width:${100 * feature.properties.size}px;height:auto;" />
                        <div class="mountain-icon">
                            ${feature.properties.name}
                        </div>
                    </div>
                `,
                iconSize: [100 * feature.properties.size, 61 * feature.properties.size],
                iconAnchor: [50 * feature.properties.size, 30 * feature.properties.size],
                popupAnchor: [0, 0]
            })
            // Create a custom marker with text below the icon
            L.marker(layer.getLatLng(), {icon: mountainIcon}).bindPopup(feature.properties.popupContent).addTo(map);
        }
    }


    geojson_features = L.geoJSON(locations, {onEachFeature: onEachFeature});
    map.fitBounds(geojson_features.getBounds());

    var legend = L.control({ position: "bottomright" });

    legend.onAdd = function(map) {
    var div = L.DomUtil.create("div", "legend");
        div.innerHTML += '<i style="background: green"></i><span>Beginner</span><br>';
        div.innerHTML += '<i style="background: royalblue"></i><span>Intermediate</span><br>';
        div.innerHTML += '<i style="background: black"></i><span>Advanced</span><br>';
        div.innerHTML += '<i style="background: red"></i><span>Expert</span><br>';
        div.innerHTML += '<i style="background: gold"></i><span>Extreme</span><br>';
        return div;
    };

    legend.addTo(map);

    map.almostOver.addLayer(geojson_features);

    map.on('almost:click', function (e) {
        e.layer.openPopup();
    });

    L.control.locate().addTo(map);
</script>

</section>
{% endblock content%}
